What's new in Blogstrap 0.8?
----------------------------

In this version, Blogstrap becomes more dynamic focusing on adding new
features and revamping the testing infrastructure to accommodate the
growth in lines of code.

* **Page Variables**: Blogstrap expands on the list of available Page
    Variables. It also provides mechanisms to overwrite the values of
    these variables on both the project-wide scope and the file-only
    scope.

* **User Metadata**: Blogstrap gains a mechanism for article authors
    to define some local metadata. The metadata is stripped out of the
    content before serving. The only use so far is to replace Page
    Variables values locally, but it will be even more useful in the
    future.

* **Dropping Sphinx documentation**: Blostrap doc is now formatted for
    Blogstrap. The blogstrap.org website is now the official (in-tree)
    documentation of the project. This means that the docs hosted at
    readthedocs are obsolete.

* **HOMEPAGE is now served directly**: In previous versions, defining
    HOMEPAGE would do a flask redirection, meaning Blogstrap would
    return a 3xx request that the client needed to follow. This
    behavior proved to be less practical than I thought, so starting
    this version Blogstrap will serve the target HOMEPAGE directly
    with the redirection shenanigans.

* **Testing Revamp** This version of Blogstrap brings a lot of focus
    on testing. The total number of tests has more than doubled. Tests
    cover more features and are laid out in several classes.


What's new in Blogstrap 0.7?
----------------------------

This version got the remaining features needed to create the
blogstrap.org website. Here are the most interesting new features:

* **Media support**: Blogstrap provides the ability to serve static
  files and media content. By defining a STATIC_DIR in the
  configuration file, the user can now link directly to static files
  that will be linked as is.

* **Favicon**: As a consequence of media support, Blogstrap now
  presents an optional FAVICON setting in the config file to provide a
  favicon in the generated html.

* **Navbar links**: A new optional configuration setting NAVBAR_LINK
  allows to define entries in the navbar. The config option takes a
  dictionary as an argument, allowing you to link both internally and
  externally.

* **TOC Blacklist**: A new optional configuration setting
  TOC_BLACKLIST allows to remove entries from the dynamically
  generated page variable `toc`.

* **Enhanced SEO**: Some modifications made to improve SEO and
  adherence to standards in the generated HTML, and the notable
  addition of OpenGraph tags in the head of the page.


What's new in Blogstrap 0.6?
----------------------------

The work on Blogstrap has resumed, with a new minor version in the works!
Here's what 0.6 will bring:

* **Dropping Strapdown**. Strapdown (and its fork, Strapdown-Zeta) didn't do it
    for me. While the idea behind these scripts is really good, and quite
    frankly were the base inspiration for this whole project, the execution was
    lacking. A full explanation of the rationale may warrant a full blog post on
    its own, but for now, let's just say that I replaced it with a homegrown
    script based on [Showdownjs](http://showdownjs.com/).

* **Table Support**. Our new markdown translator supports html tables. Yay!

* **Homepage** Blogstrap now takes an optional configuration option (aptly named
    HOMEPAGE) that gives the article the blog will point at if the root of the
    domain is requested.

* **Page Variables** Blogstrap gives the author some variables that
    get expanded in their articles. These variables follow a
    jinja-like syntax, but don't provide any of the templating
    features like conditionals or loops. They only get expanded with a
    simple `replace` call. The first variable introduced is `toc`
    which introduces a dynamic table of content in the blog. I am
    tempted to mark this feature as _experimental_, since it's widely
    untested, but let's face it, all of Blogstrap is still
    experimental at this stage and will require a bit more work before
    it's fully production-ready.

* **Dropping gating on py2**. Py2 is dead, or so they say. As of 0.6, Blogstrap
    is still fully compatible with python2, but it's more of an accident than a
    feature. I'm not testing against python2 as much and future releases might
    break at any moment.


What's new in Blogstrap 0.5?
----------------------------------

There have been some changes recently in Blogstrap, enough to warrant
a new version number. Here are the major modifications:


* **Replacing Strapdown.js with Strapdown-Zeta**. Strapdown.js has
  been unmaintained for a long time. Some people have forked it and
  created Strapdown-Zeta which is still actively maintained. Moving to
  the new modern script gives us some nice features instantly, like a
  client-side theme picker or better SEO integration. It also feels
  like there are more themes than its predecessor and it may be just
  me, but the themes look updated and slightly better.

* **Overshadow** a new feature that allows to serve different content
  between the markdown and the html version, by providing both a
  `*.md` and `*.html`. The client is still in charge of requesting the
  proper MIME type, but the blog publisher can now better control what
  they get.

* **A new CLI subparser** you can now run Blogstrap on the Flask
  development server by running the command `blogstrap run`. It takes
  an optional argument to a config file, and will serve the files in
  the current directory.

* **New default directory structure**. Instead of creating all its
  files, and a directory to hold articles, `blogstrap init` now will
  only generate its files in a `.blogstrap` directory by default. The
  hidden directory will not be served by the app server, and can now
  live safely along other hidden directories (like your .git) without
  fear of http access to them. Note that the default directory
  structure only affects the layout generated by `blogstrap init`, but
  it shouldn't affect already published blogs (as long as the
  configuration file remains untouched). The doc has been updated to
  reflect the new initial layout.

* **Deprecating py33 gating** Blogstrap's been using Travis CI for
  gating, and sometimes in the past months, they seem to have dropped
  python 3.3 from the default job templates. Note that if you have
  python3.3 and would like to run the tests locally, you can always
  `tox -e py33`.
