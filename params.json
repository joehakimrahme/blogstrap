{"name":"Blogstrap","tagline":"A dumb blogging platform based on Strapdown.js","body":"[![Build Status](https://api.travis-ci.org/joehakimrahme/blogstrap.png)](https://api.travis-ci.org/joehakimrahme/blogstrap)\r\nBlogstrap - A dumb blogging platform\r\n====================================\r\n\r\nBlogstrap is a simple blogging platform based on a few core principles:\r\n\r\n* **Version control management tools implement a lot of useful features for\r\n  blogging**\r\n\r\nI want to publish my articles the same way I publish source code. Draft review\r\nand Pull Request follow the same workflow and the same tools should be reused.\r\n\r\n* **Readers aren't always visiting in a browser**.\r\n\r\nBlogstrap puts forward markup languages that emphasise human readability, and\r\nserve html only when html is needed.\r\n\r\n* **HTML rendering should be done client-side**.\r\n\r\nIt doesn't make sense for your blog to hold both the markup file and its html\r\ncounterpart. The repo hold the info once, the client can decide how to display\r\nit.\r\n\r\n\r\nDependencies\r\n------------\r\n\r\nBlogstrap depends on the following 2 projects:\r\n\r\n* [Flask](http://flask.pocoo.org/)\r\n* [Strapdown.js](http://strapdownjs.com/)\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n* Available on PyPI:\r\n\r\n```\r\npip install blogstrap\r\n```\r\n\r\n* It's still changing fast so I recommend installing from source:\r\n\r\n```\r\npython setup.py install\r\n```\r\n\r\nIt's recommended that you install Blogstrap inside a virtualenv or in a\r\ndedicated virtual machine (or cloud instance).\r\n\r\n\r\nPublish a blog with Blogstrap\r\n-----------------------------\r\n\r\nAfter installing Blogstrap on your machine, here's how you can use it for\r\nblogging. There are multiple ways to host and serve your Flask application, here\r\nI'm showing an example of how to do it with `gunicorn`.\r\n\r\n* Create a new directory `articles`\r\n* Inside that directory create a file called `wsgi.py`\r\n\r\n```python\r\nfrom blogstrap.blogstrap import create_app\r\napplication = create_app(\"/path/to/articles/.blogstrap.conf\")\r\n```\r\n\r\n* Inside that directory create a file called `.blogstrap.conf`\r\n\r\n```python\r\nBLOGROOT=\"/path/to/articles\"\r\nBLOGTITLE=\"My super blog published with Blogstrap\"\r\nTHEME=\"simplex\"\r\n```\r\n\r\n* Create a markdown file in `articles`. Call it `helloworld.md`\r\n\r\n* Serve it over the network:\r\n\r\n```\r\n$ gunicorn wsgi:application -b '0.0.0.0'\r\n```\r\n\r\n* Open article in a web browser, at the location `http://<gunicorn_address>/heblloworld`\r\n\r\n* Note that you can use `curl` to get the markdown version\r\n\r\n```\r\ncurl http://<gunicorn_address>/helloworld\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}